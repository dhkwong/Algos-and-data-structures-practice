/*
Write an efficient algorithm that searches for a target value in an m x n integer matrix. The matrix has the following properties:

Integers in each row are sorted in ascending from left to right.
Integers in each column are sorted in ascending from top to bottom.
 

Example 1:


Input: matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 5
Output: true

*/

/**
 * @param {number[][]} matrix
 * @param {number} target
 * @return {boolean}
 */
var searchMatrix = function(matrix, target) {
    //start from bottom row
    var i = matrix.length-1
    //start from left colum
    var j = 0
    while(i>=0 && j < matrix[0].length){
        //if greater, decrement row, moving up
        if(matrix[i][j]>target){
            i--
        }
        //if smaller, increase column, thus moving right
        else if(matrix[i][j]< target){
            j++
        } else{
            //else it's equal, and we return true
            return true
        }
    }
    return false
};