/**
 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {TreeNode} root
 */
//this._ extends variable to outside of the scope. var forces it to stay in the scope

var FindElements = function(root) {
   this.set = new Set();
   let dfs = (root, val = 0)=>{
       root.val = val;
       this.set.add(val);
       if(root.left) dfs(root.left, 2*val+1);
       if(root.right) dfs(root.right, 2*val+2);
   };
   //no need for val since val is assigned a default value of 0 unless otherwise stated
   dfs(root);
};



/** 
 * @param {number} target
 * @return {boolean}
 */
FindElements.prototype.find = function(target) {
    return this.set.has(target)
};

/** 
 * Your FindElements object will be instantiated and called as such:
 * var obj = new FindElements(root)
 * var param_1 = obj.find(target)
 */